@import "./color-scheme-7.scss";

@import url('https://fonts.googleapis.com/css2?family=Bitter:ital,wght@0,100..900;1,100..900&family=Work+Sans:ital,wght@0,100..900;1,100..900&display=swap');

* {
  padding: 0;
  margin: 0;
  font-family: 'Work Sans';
  font-weight: 300;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: rgb(13, 13, 45);
  color: $text;


  header {
    padding: 40px;
  }

  h1,
  h3 {
    padding-bottom: 10px;
    color: $text;
    font-family: bitter;
    font-weight: 300;
  }

  p {
    color: $text;
  }

  a {
    color: $accent-2;
  }

  main {
    padding: 40px;
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    gap: 40px;
  }

  section {
    width: 350px;
    min-height: 65vh;
    background-color: $background;
    padding: 40px;
    border-radius: 5px;
    display: flex;
    flex-direction: column;
    align-items: center;

    h3 {
      color: $text;
      margin-top: -10px;
      padding-bottom: 30px;
      font-size: 22px;
    }
  }
}

.accordions {
  .accordion-item {
    width: 100%;
    border-radius: 5px;
    overflow: hidden;
    margin-bottom: 10px;

    .accordion-buttons {
      color: $text-light;
      font-size: 16px;
      width: 100%;
      padding: 20px;
      background-color: $accent;
      border: none;
      display: flex;
      justify-content: space-between;
    }

    .accordion-content {
      line-height: 1.8rem;
      padding: 15px;
      color: $text;
      background-color: $secondary;
    }

    .hide {
      display: none;
    }
  }
}

.local-storage-list {
  .list-item {
    display: flex;
    align-items: center;
    gap: 10px;
    margin: 10px;

    input {
      margin-right: 5px;
      height: 20px;
      width: 20px;
      display: none;
    }

    input[type="checkbox"]+label::before {
      content: '.';
      color: transparent;
      display: inline-block;
      width: 16px;
      height: 16px;
      border: 2px solid $accent;
      border-radius: 3px;
      margin-right: 8px;
      line-height: 1rem;
    }

    input[type="checkbox"]:checked+label::before {
      content: 'âœ“';
      background-color: $accent;
      color: white;
      text-align: center;
    }

    input[type="checkbox"]:checked+label {
      text-decoration: line-through;
    }

    button {
      border: none;
      height: 14px;
      width: 14px;
      border-radius: 3px;
      color: $background;
      background-color: $accent-2;
      font-size: 10px;
      font-weight: 500;
    }
  }

  .add-new {
    padding: 20px;
    margin: 20px;
    display: flex;
    align-items: center;
    gap: 10px;
    background-color: $secondary;
    border-radius: 5px;

    input {
      border: none;
      border-radius: 3px;
      height: 30px;
      margin-left: 10px;
    }

    button {
      border: none;
      border-radius: 3px;
      height: 30px;
      padding: 0 10px;
      background-color: $accent;
      color: $text;
    }
  }

}

.memory-game {
  .cards-container {
    width: 300px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;

    .image-container {
      background-color: $accent-2;
      z-index: 99999999;
      height: 80px;
      width: 80px;
    }

    img {
      width: 80px;
      height: 80px;
      filter: opacity(100%);
      transition: filter 0.5s;

      &.hidden {
        filter: opacity(0%);
      }

      &.matched {
        pointer-events: none;
      }
    }
  }
}

.coin-flip {
  *,
*:after,
*:before {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
  perspective: 500px;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  height: 100vh;

  .euro {

  }

  .container {
    width: 10em;
    height: 10em;
    position: relative;
    perspective: 300px;
    margin: 2em;
    transform: translateZ(-0.4em);
  }

  .coin {
        --face: #0066ff;
    --sign: #c49a44;
    --circle: #c49a44;
    --side: #dbb765;
    --slide: #c49a44;
    width: 98%;
    height: 98%;
    position: absolute;
    transform-style: preserve-3d;
    animation: spinEuro 50s -3s linear infinite;
  }

  .face {
    border-radius: 5em;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    background: var(--face);
  }

  .front {
    transform: translate3d(0, 0, 0.4em) rotateY(0);
  }

  .back {
    transform: rotateY(180deg) translate3d(0, 0, 0.4em);
  }

  .image-container {
    width: 100%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    img {
      margin: 10%;
      padding: 3px;
      width: 80%;
      height: 80%;
      border-radius: 50%;
      border: 0.2em dashed var(--circle);
    }
  }

  .side {
    width: 0.8em;
    height: 3px;
    background: var(--side);
    position: absolute;
    left: 50%;
    top: 50%;
    backface-visibility: hidden;
  }

  @for $i from 1 through 180 {
    figure:nth-of-type(#{$i}) {
      transform: translate3d(-50%, -50%, 0) rotateY(90deg) rotateX(($i - 1) * 2deg) translateZ(4.9em);
    }
  }



  @keyframes spinEuro {
    0% {
      transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }

    50% {
      transform: rotateX(5 * 360deg) rotateY(45deg) rotateZ(25deg);
    }

    100% {
      transform: rotateX(10 * 360deg) rotateY(0deg) rotateZ(0deg);
    }
  }

}